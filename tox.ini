[tox]
min_version = 4.0
requires =
    setuptools >= 30.3.0
    pip >= 21.0.1
    tox-pypi-filter >= 0.14
envlist =
    py{310,311,312}
    py312-devdeps
    py310-oldestdeps
    build_docs{,-notebooks}
    codestyle

[testenv]
pypi_filter = https://raw.githubusercontent.com/sunpy/sunpy/main/.test_package_pins.txt
# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
change_dir = .tmp/{envname}
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies
    devdeps: with the latest developer version of key dependencies
pass_env =
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    LC_ALL
set_env =
    MPLBACKEND = agg
    COLUMNS = 180
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
    # Define the base test command here to allow us to add more flags for each tox factor
    PYTEST_COMMAND = pytest -vvv -r fEs --pyargs dkist --cov-report=xml --cov=dkist --cov-config={toxinidir}/.coveragerc {toxinidir}/docs
deps =
    # For packages which publish nightly wheels this will pull the latest nightly
    devdeps: astropy>=0.0.dev0
    devdeps: numpy>=0.0.dev0
    devdeps: scipy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: sunpy>=0.0.dev0
    devdeps: git+https://github.com/sunpy/ndcube
    devdeps: git+https://github.com/spacetelescope/gwcs
    devdeps: git+https://github.com/asdf-format/asdf
    devdeps: git+https://github.com/astropy/asdf-astropy
    # Autogenerate oldest dependencies from info in setup.cfg
    oldestdeps: minimum_dependencies
# The following indicates which extras_require will be installed
extras =
    tests
commands_pre =
    oldestdeps: minimum_dependencies dkist --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt cryptography<42 jsonschema==4.0.1
    pip freeze --all --no-input
commands =
    # To run different commands for different factors exclude the factor from the default command like this
    # !online: {env:PYTEST_COMMAND} {posargs}
    # Then specify a specific one like this
    # online: {env:PYTEST_COMMAND} --remote-data=any {posargs}
    !online: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --remote-data=any {posargs}

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

[testenv:build_docs{,-notebooks}]
description = invoke sphinx-build to build the HTML docs
change_dir =
    docs
extras =
    docs
commands =
    pip freeze --all --no-input
    # Disable parallel here due to https://github.com/astropy/astropy/issues/14916
    !notebooks: sphinx-build -j 1 --color -W --keep-going -b html -d _build/.doctrees . _build/html -D nb_execution_mode=off {posargs}
    notebooks: sphinx-build -j 1 --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'
