[metadata]
name = dkist
author = NSO / AURA
author_email = stuart@cadair.com
description = DKIST User Tools
long_description = file: README.rst
license = BSD 3-Clause
url = http://dkist.nso.edu
edit_on_github = True
github_project = DKISTDC/dkist
classifiers =
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9

[options]
python_requires = >=3.7
packages = find:
include_package_data = True
install_requires =
  appdirs>=1.4
  asdf>=2.7.0
  astropy>=4.2
  dask[array]>=2
  globus-sdk>=1.7
  gwcs>=0.16.1
  matplotlib>=3.1
  ndcube>=2.0.0b2
  numpy>=1.7
  parfive[ftp]>=1.2
  sunpy[net,asdf]>=2.1.0
setup_requires = setuptools_scm

[options.extras_require]
tests =
  pytest-astropy
  pytest-cov
  pytest-mock
  pytest-mpl
  pytest-httpserver
  hypothesis
  tox
docs =
  sphinx
  sphinx-astropy
  sphinx-gallery
  pytest
  towncrier
  dkist-sphinx-theme

[options.package_data]
data = test/**
io = *.yaml,asdf/schemas/**

[options.entry_points]
asdf_extensions =
  dkist = dkist.io.asdf.extension:DKISTExtension

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[upload_docs]
upload-dir = docs/_build/html
show-response = 1

[tool:pytest]
minversion = 3.0
testpaths = "dkist" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = --doctest-ignore-import-errors
markers =
    online: marks this test function as needing online connectivity.
    figure: marks this test function as using hash-based Matplotlib figure verification. This mark is not meant to be directly applied, but is instead automatically applied when a test function uses the @sunpy.tests.helpers.figure_test decorator.
# Disable internet access for tests not marked remote_data
remote_data_strict = True
filterwarnings =
    error
    always::PendingDeprecationWarning
    # Some tests use data that have dates in the future and ERFA does not like.
    ignore:ERFA function "d2dtf"*
    ignore:ERFA function "dtf2d"*
    ignore:ERFA function "utctai"*
    ignore:ERFA function "taiutc"*
    # Zeep deprecation warning
    ignore:defusedxml.lxml is no longer supported and will be removed in a future release.
    # This is fixed in sunpy 2.1
    ignore::DeprecationWarning:sunpy.net._attrs
    # TODO: come up with a better solution for this
    ignore::hypothesis.errors.HypothesisDeprecationWarning
    # This is due to dependencies building with a numpy version different from
    # the local installed numpy version, but should be fine
    # See https://github.com/numpy/numpy/issues/15748#issuecomment-598584838
    ignore:numpy.ufunc size changed:RuntimeWarning
    ignore:numpy.ndarray size changed:RuntimeWarning
    # This isn't really an issue it's an annoyance, it's triggered by printing
    # an astropy table inside a test, which is generally only done when
    # debugging.
    ignore:the imp module is deprecated in favour of importlib:DeprecationWarning:ipykernel.iostream

[flake8]
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py,__init__.py
max-line-length = 100
ignore = I1,D1,D200
docstring-convention=numpy

[pylint]
disable = W,R

[yapf]
column_limit = 100

[pycodestyle]
max_line_length = 100
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py

[coverage:run]
omit =
  dkist/conftest.py
  dkist/cython_version*
  dkist/*setup*
  dkist/extern/*
  dkist/*/tests/*
  dkist/version*
  dkist/__init__*
  dkist/_sunpy_init*
  */dkist/conftest.py
  */dkist/cython_version*
  */dkist/*setup*
  */dkist/extern/*
  */dkist/*/tests/*
  */dkist/version*
  */dkist/__init__*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
